class Solution {
public:
    int minEatingSpeed(vector<int>& piles, long long h) {
        long long low = 1, high = *max_element(piles.begin(), piles.end());
        while(low<=high){
            long long mid = low + (high-low)/2;
            long long z = ans(piles,mid);
            
            if(z<=h){
                
                high = mid -1;
            }else{
                low = mid + 1;
            }
        }
        return low;
    }
    long long ans(vector<int>& a, long long b){
        long long answ=0;
        for(int i=0;i<a.size();i++){
            answ += ceil(a[i]/(b*1.0));
        }
        return answ;
    }
};
