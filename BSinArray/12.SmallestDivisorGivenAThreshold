class Solution {
public:
    int smallestDivisor(vector<int>& nums, int threshold) {
        int low = 1, high = *max_element(nums.begin(),nums.end()), req;
        while(low<=high){
            int mid = low + (high-low)/2;
            int p = ans(nums,mid);
            if(p<=threshold){
                req = mid;
                high = mid - 1;
            }else{
                low = mid + 1;
            }
        }
        return req;
    }
    int ans(vector<int>& nums , int k){
        int sum=0;
        for(int i=0;i<nums.size();i++){
            sum = sum + ceil(nums[i]/(k*1.0));
        }
        return sum;
    }
};
