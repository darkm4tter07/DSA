
class Solution {
public:

    int minDays(vector<int>& bloomDay, int m, int k) {
        long long a = m;
        a=a*k;
        if(bloomDay.size()<a){
            return -1;
        }
        
        
        long long low = *min_element(bloomDay.begin(),bloomDay.end());
        long long high = *max_element(bloomDay.begin(),bloomDay.end()),ans;
        while(low<=high){
            long long mid = low + (high-low)/2;
            long long poss = days(bloomDay,mid,m,k);
            if(poss>=m){
                ans = mid;
                high = mid - 1;
            }else{
                low = mid + 1;
            }
        }
        return ans;
    }

    long days(vector<int>& a, long b, long m, long k){
        int count = 0;
        int ans=0;
        for(int i=0;i<a.size();i++){
            if(a[i]<=b){
                count++;
                if(count==k){
                    ans++;
                    count = 0;
                }
            }else{
                count = 0;
            }

            if(ans==m){
                break;
            }

        }
        return ans;
    }
};
