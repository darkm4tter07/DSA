/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */

Node *deleteLast(Node *list){
    Node* temp = list;
    while(temp->next->next!=nullptr){
        temp=temp->next;
    }
    delete temp->next;
    temp->next = nullptr;
    return list;
}
//The deleteLast function is intended to delete the last node in a singly-linked list. When you delete the last node using delete temp, you should also update the next pointer of the second-to-last node to nullptr. //Otherwise, it will still point to the deleted node, which can lead to undefined behavior.

