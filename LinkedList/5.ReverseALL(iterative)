/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public: 
    ListNode* reverseList(ListNode* head) {
        if(head==NULL or head->next==NULL){
            return head;
        }
        //1 2 3 4 5
        ListNode* prev = head; //prev=head = 1->2
        head = head->next;//temp = 2->3
        prev->next = nullptr; //prev = 1->null;
        ListNode* temp = head->next; //temp = 3->4; 
        head->next = prev; //head = 2->1;
        prev = head; //prev = head = 2->1;
        while(temp!=NULL){
            head = temp; 
            temp = head->next;
            head->next = prev;
            prev = head;
        }
        return head;
    }
};
