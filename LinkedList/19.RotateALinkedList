/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* rotateRight(ListNode* head, int k) {
        if(k==0) return head;
        if(head==NULL || head->next == NULL){
            return head;
        }
        int count = 1;
        ListNode* tail = head;
        while(tail->next){
            count++;
            tail = tail->next;
        }
        k = k%count;
        if(k==0) return head;
        int t = count - k -1;
        ListNode* temp = head;
        while(t--){
            temp = temp->next;
        }
        ListNode* dummy = temp->next;
        tail->next = head;
        head = dummy;
        temp->next = nullptr;
        return head;
    }
};
